# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrgrg: 'cl-CirrusAI-LTGenius'
  bkstrg: 'ltgeniusterraform'
  bkcontainer: 'tfstate'
  bkstrgkey: 'terraform.tfstate'

stages:
  - stage: tfdestroy
    jobs: 
      - job: destroy
        steps:
          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra/'
              backendServiceArm: 'cl-cirrusai-ltgenius-service-conn'
              backendAzureRmResourceGroupName: '$(bkstrgrg)'
              backendAzureRmStorageAccountName: '$(bkstrg)'
              backendAzureRmContainerName: '$(bkcontainer)'
              backendAzureRmKey: '$(bkstrgkey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra/'
              environmentServiceNameAzureRM: 'cl-cirrusai-ltgenius-service-conn'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra/'
              environmentServiceNameAzureRM: 'cl-cirrusai-ltgenius-service-conn'

